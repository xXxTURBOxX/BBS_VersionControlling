
--[[getLuaEngine().cbShowOnPrint.Checked=false
getLuaEngine().hide()
getLuaEngine().OnShow = function (sender) return sender.hide(); end; ]]--
local Client_VERSION = 1
local approvedID = ""
local DeviceID = ""
local DeviceMac = ""
local NewUserInfo = ""
local UserInfoSync = ""
local hostIndex = 0                              --Table For Dropbox
local UserDiscordName
local isPremium = false
local isTrial = false
local ClientDataMeta_url
if hostIndex == 0 then
ClientDataMeta_url = "https://dl.dropboxusercontent.com/scl/fi/l7s4jx7si7ezlg6hwr8p4/ClientTableMeta.txt?rlkey=99a5933njrf3cyzfe8bdjp8tr&dl=0"
else
ClientDataMeta_url = "https://raw.githubusercontent.com/xXxTURBOxX/BBS_VersionControlling/main/ClientTableMeta.txt"
end

local firstRun = 0
local LoadingProgress = 0
local LoadingBarEndTime = 5

function GetMac()
 local t = io.popen('ipconfig /all')
 local ret = string.match(t:read("*all"),"%w+[-]%w+[-]%w+[-]%w+[-]%w+[-]%w+")
  t:close()
  if ret then
  return ret
  end
end

-- Function to generate a fixed device ID (you can customize this method)
function generateDeviceID()
    -- Example: Using wmic command to get the UUID
    local file = io.popen("wmic csproduct get uuid")
    local uuid = file:read("*a")
    file:close()
    return uuid:match("UUID%s*(%S+)"):gsub("-", "") -- Extract and format device ID
end

-- Function to check access based on input in CEEdit1
function getIDAndMac_NewUser(key)
  writeToClipboard(ansiToUtf8(NewUserInfo))
  local keytoggle = key or 0
  if keytoggle == 0 then
  local answer = messageDialog("\tAccess denied. This device is no longer approved.\n\nYour Uid: "..DeviceID.."\nMac Address : "..DeviceMac.."\nAre copied to clipboard\n\nThanks for using my tools\nTurbo☢—「☬」", mtInformation, mbOK)
    if answer == mrOk then
      os.exit()
    else
    os.exit()
    end
    else
    local answer = messageDialog("Your Uid: "..DeviceID.."\nMac Address : "..DeviceMac.."\nAre copied to clipboard\n\nThanks for using my tools\nTurbo☢—「☬」", mtInformation, mbOK)
    return
    end
end

-- Function to show a message box
function showMessage(msg)
    messageDialog(msg, mtInformation, mbOK)
end

-- Function to check access based on input in CEEdit1
function checkAccess(Recheck)
    local premiumFound = false
    local AccessRecheck = Recheck or 0
    local TrialFlag = string.upper("Trial_")
    local PremiumFlag = string.upper("Premium_")
    local DayFlag = string.upper("Day_")
    if ModToolVersionData.PremiumData.AccessForRegularUsers then        --Grant Access to everyone
      UserDiscordName = "Free Premium Access"
      isPremium = true
      isTrial = false
      premiumFound = true
      return
    end
    if AccessRecheck ~= 0 then
    UserDiscordName = ""
    isTrial = false
    isPremium = false
    for k,v in pairs(UsersIdTable.PremiumUsers) do
      if v ~= nil then
        if string.match(string.upper(v),string.upper(UserInfoSync)) then
          UserDiscordName = string.sub(v,53)
          UserDiscordName = string.gsub(UserDiscordName,"_.*","")
          isPremium = true
          isTrial = false
          premiumFound = true
          return
        end
       else
       isPremium = false
       isTrial = false
      end
    end


    for k,v in pairs(UsersIdTable.TrialUsers) do
      if v ~= nil and premiumFound == false then
        if string.match(string.upper(v),string.upper(UserInfoSync)) then
          UserDiscordName = string.sub(v,53)
          UserDiscordName = string.gsub(UserDiscordName,"_.*","")
          isTrial = true
          isPremium = false
        end
       else
       isPremium = false
       isTrial = false
      end
    end
    return
    end

    local premiumFound = false
    UserDiscordName = ""
    for k,v in pairs(UsersIdTable.PremiumUsers) do
      if v ~= nil then
        if string.match(string.upper(v),string.upper(UserInfoSync)) then
          UserDiscordName = string.sub(v,53)
          UserDiscordName = string.gsub(UserDiscordName,"_.*","")
          isPremium = true
          isTrial = false
          premiumFound = true
        end
       else
       isPremium = false
       isTrial = false
      end
    end


    for k,v in pairs(UsersIdTable.TrialUsers) do
      if v ~= nil and premiumFound == false then
        if string.match(string.upper(v),string.upper(UserInfoSync)) then
          UserDiscordName = string.sub(v,53)
          UserDiscordName = string.gsub(UserDiscordName,"_.*","")
          isTrial = true
          isPremium = false
        end
       else
       isPremium = false
       isTrial = false
      end
    end
end


function GUIUpdate()

------------------User Info Section

Turbo_Client.text_UID.Caption = "Your ID: "..DeviceID
if UserDiscordName ~= nil and UserDiscordName ~= "" then
Turbo_Client.DiscordName.Caption = "Hello, "..UserDiscordName
else
Turbo_Client.DiscordName.Caption = ""
end
Turbo_Client.text_mainInfo.Caption = "Select version of mod to load... "

------------------License Checking Section

if isPremium or isTrial then
if isTrial and ModToolVersionData.PremiumData.TableVersion ~= 0 then
Turbo_Client.mark_subscriptionType.Caption = "Trial Subscription"
Turbo_Client.func_loadMT1.Caption = "Load"
Turbo_Client.mark_subscriptionType.BorderColor = 0x00039EFC
Turbo_Client.func_loadMT1.Enabled = true
Turbo_Client.func_loadMT1.ButtonColor = 0x003F3F3F
end
if isPremium and ModToolVersionData.PremiumData.TableVersion ~= 0 then
Turbo_Client.mark_subscriptionType.Caption = "Premium Subscription"
Turbo_Client.func_loadMT1.Caption = "Load"
Turbo_Client.mark_subscriptionType.BorderColor = 0x00039EFC
Turbo_Client.func_loadMT1.Enabled = true
Turbo_Client.func_loadMT1.ButtonColor = 0x003F3F3F
end
else
Turbo_Client.func_loadMT1.Caption = "UnAvailable"
Turbo_Client.mark_subscriptionType.BorderColor = clWhite
Turbo_Client.func_loadMT1.Enabled = false
Turbo_Client.func_loadMT1.ButtonColor = 0x001B1B1B
Turbo_Client.mark_subscriptionType.Caption = "No Subscription"
Turbo_Client.mark_subscriptionType.BorderColor = clWhite
if math.floor(LoadingProgress) >= LoadingBarEndTime * 10 then
Turbo_Client.DiscordName.Caption = "Hello, Free User"
end
if ModToolVersionData.PremiumData.TableVersion ~= 0 then
Turbo_Client.func_loadMT1.Caption = "UnAvailable"
Turbo_Client.func_loadMT1.Enabled = false
Turbo_Client.func_loadMT1.ButtonColor = 0x001B1B1B
end
end

------------------Premium Block Section

if ModToolVersionData.PremiumData ~= nil and ModToolVersionData.PremiumData.VisibleForAll then
Turbo_Client.block_MT1.Visible = true
Turbo_Client.text_nameMT1.Caption = ModToolVersionData.PremiumData.Name
Turbo_Client.text_nameMT1.Font.Color = ModToolVersionData.PremiumData.NameColor
Turbo_Client.text_infoMT1.Caption = "•Mod Version: "..ModToolVersionData.PremiumData.Version
Turbo_Client.text_infoMT5.Caption = "•For Game Version: "..ModToolVersionData.PremiumData.ForBBS
Turbo_Client.text_infoMT6.Caption = "•Last Update: "..ModToolVersionData.PremiumData.LastUpdate
if ModToolVersionData.PremiumData.isStableBuild == true then
Turbo_Client.mark_stateMT1.ButtonColor = 0x0000B500
Turbo_Client.mark_stateMT1.Caption = "Stable"
else
if ModToolVersionData.PremiumData.isStableBuild == false then
Turbo_Client.mark_stateMT1.Caption = "Not Stable"
Turbo_Client.mark_stateMT1.ButtonColor = 0x000000B5
else
Turbo_Client.mark_stateMT1.Caption = ModToolVersionData.PremiumData.isStableBuild
Turbo_Client.mark_stateMT1.ButtonColor = 0x0000B500
end
end
if ModToolVersionData.PremiumData.AccessForRegularUsers then
if ModToolVersionData.PremiumData.isCurrentFreeAccess then
Turbo_Client.text_infoMT7.Caption = "•Currently free to access..."
else
Turbo_Client.text_infoMT7.Caption = "•Only For Subscribers and Trial Users"
end
else
Turbo_Client.text_infoMT7.Caption = "•Only For Subscribers and Trial Users"
end

if ModToolVersionData.PremiumData.TableVersion == 0 then
Turbo_Client.func_loadMT1.Caption = "UnAvailable,Updating..."
Turbo_Client.func_loadMT1.ButtonColor = 0x001B1B1B
Turbo_Client.func_loadMT1.Enabled = false
end

else
Turbo_Client.block_MT1.Visible = false

end

if ModToolVersionData.ClientHeader ~= nil and ModToolVersionData.ClientHeader ~= "" then
Turbo_Client.text_clientHeader.Caption = ModToolVersionData.ClientHeader
else
Turbo_Client.text_clientHeader.Caption = "Turbo Client v1.0"
end

------------------Free Block Section

if ModToolVersionData.FreeData ~= nil and ModToolVersionData.FreeData.VisibleForAll then
Turbo_Client.block_MT2.Visible = true
Turbo_Client.text_nameMT2.Caption = ModToolVersionData.FreeData.Name
Turbo_Client.text_nameMT2.Font.Color = ModToolVersionData.FreeData.NameColor
Turbo_Client.text_infoMT2.Caption = "•Mod Version: "..ModToolVersionData.FreeData.Version
Turbo_Client.text_infoMT8.Caption = "•For Game Version: "..ModToolVersionData.FreeData.ForBBS
Turbo_Client.text_infoMT9.Caption = "•Last Update: "..ModToolVersionData.FreeData.LastUpdate
if ModToolVersionData.FreeData.isStableBuild == true then
Turbo_Client.mark_stateMT2.ButtonColor = 0x0000B500
Turbo_Client.mark_stateMT2.Caption = "Stable"
else
if ModToolVersionData.FreeData.isStableBuild == false then
Turbo_Client.mark_stateMT2.Caption = "Not Stable"
Turbo_Client.mark_stateMT2.ButtonColor = 0x000000B5
else
Turbo_Client.mark_stateMT2.Caption = ModToolVersionData.FreeData.isStableBuild
Turbo_Client.mark_stateMT2.ButtonColor = 0x0000B500
end

end
if ModToolVersionData.FreeData.AccessForRegularUsers == true then
Turbo_Client.text_infoMT10.Caption = "•For All Users"
else
Turbo_Client.text_infoMT10.Visible = false
end


if ModToolVersionData.FreeData.TableVersion == 0 then
Turbo_Client.func_loadMT2.Caption = "UnAvailable,Updating..."
Turbo_Client.func_loadMT2.ButtonColor = 0x001B1B1B
Turbo_Client.func_loadMT2.Enabled = false
else
Turbo_Client.func_loadMT2.Caption = "Load"
Turbo_Client.func_loadMT2.ButtonColor = 0x003F3F3F
Turbo_Client.func_loadMT2.Enabled = true
end

else
Turbo_Client.block_MT2.Visible = false


end

------------------Special Thanks Block Section

if ModToolVersionData.SpecialThanks ~= nil and ModToolVersionData.SpecialThanks.VisibleForAll then
Turbo_Client.text_infoClientUpdate1.Caption = ModToolVersionData.SpecialThanks.ThanksMsg
Turbo_Client.text_infoClientUpdate1.Font.Color = ModToolVersionData.SpecialThanks.ThanksMsgColor
Turbo_Client.KerroxCredits.Visible = true
else
Turbo_Client.KerroxCredits.Visible = false
end

--More Tools Section
if ModToolVersionData.KerroxPremiumData ~= nil then
Turbo_Client.block_MT3.Visible = true
else
Turbo_Client.block_MT3.Visible = false
end

if ModToolVersionData.KerroxFreeData ~= nil then
Turbo_Client.block_MT4.Visible = true
else
Turbo_Client.block_MT4.Visible = false
end


------------------Community Block Section

if ModToolVersionData.CommunityData ~= nil and ModToolVersionData.CommunityData.VisibleForAll then
Turbo_Client.block_MT5.Visible = true
Turbo_Client.CommunityText.Caption = ModToolVersionData.CommunityData.CommunitySectionTitle
Turbo_Client.CommunityText.Font.Color = ModToolVersionData.CommunityData.CommunitySectionColor

if ModToolVersionData.CommunityData.DiscordVisible then
Turbo_Client.DiscordServerButton.Enabled = true
Turbo_Client.DiscordServerButton.Visible = true
else
Turbo_Client.DiscordServerButton.Enabled = false
Turbo_Client.DiscordServerButton.Visible = false
end

if ModToolVersionData.CommunityData.BoostyVisible then
Turbo_Client.BoostyButton.Enabled = true
Turbo_Client.BoostyButton.Visible = true
else
Turbo_Client.BoostyButton.Enabled = false
Turbo_Client.BoostyButton.Visible = false
end

if ModToolVersionData.CommunityData.KofiVisible then
Turbo_Client.KofiButton.Enabled = true
Turbo_Client.KofiButton.Visible = true
else
Turbo_Client.KofiButton.Enabled = false
Turbo_Client.KofiButton.Visible = false
end

if ModToolVersionData.CommunityData.PaypalVisible then
Turbo_Client.PaypalButton.Enabled = true
Turbo_Client.PaypalButton.Visible = true
else
Turbo_Client.PaypalButton.Enabled = false
Turbo_Client.PaypalButton.Visible = false
end

else
Turbo_Client.block_MT5.Visible = false
end


end

function Turbo_Client_DiscordServerButtonClick(sender)
ShellExecute("https://discord.gg/CwJvVYeCGz")
end

function Turbo_Client_BoostyButtonClick(sender)
ShellExecute("https://boosty.to/turbotrainer")
end

function Turbo_Client_PaypalButtonClick(sender)
ShellExecute("https://paypal.me/TurboMancer")
end

function Turbo_Client_KofiButtonClick(sender)
ShellExecute("https://ko-fi.com/turbo3252")
end

function Turbo_Client_CopyUUidClick(sender)
getIDAndMac_NewUser(1)
end

function Turbo_Client_func_loadMT1Click(sender)
http = getInternet()
PrivateTool = http.getURL(ModToolVersionData.PrivateToolTurbo_url)
while PrivateTool == nil do
PrivateTool = http.getURL(ModToolVersionData.PrivateToolTurbo_url) sleep(0) end
load(PrivateTool)()
http.destroy()
Turbo_Client.hide()
end

function Turbo_Client_func_loadMT2Click(sender)
http = getInternet()
PublicTool = http.getURL(ModToolVersionData.PublicTool_url)
while PublicTool == nil do
PublicTool = http.getURL(ModToolVersionData.PublicTool_url) sleep(0) end
load(PublicTool)()
http.destroy()
Turbo_Client.hide()
end


function Turbo_Client_FormClose(sender)
os.exit()
closeCE()
return caHide --Possible options: caHide, caFree, caMinimize, caNone
end

DeviceID = generateDeviceID()
DeviceMac = GetMac()
DeviceMac = string.gsub(DeviceMac,"-","_")
NewUserInfo = DeviceID.."__"..DeviceMac
UserInfoSync = DeviceID.."__"..DeviceMac

synchronize(
function()
http = getInternet()
code = http.getURL(ClientDataMeta_url)
while code == nil do
code = http.getURL(ClientDataMeta_url) sleep(0) end
load(code)()
UsersTableget = http.getURL(ModToolVersionData.approvedID_url)
while UsersTableget == nil do
UsersTableget = http.getURL(ModToolVersionData.approvedID_url) sleep(0) end
load(UsersTableget)()
if Turbo_Client == nil then
formData = http.getURL(ModToolVersionData.ClientForm_url)
local stream = createStringStream(formData)
_G["Turbo_Client"] = createFormFromStream(stream)
stream:destroy()
Turbo_Client.show()
end
if HotkeyPrefs == nil then
HotkeyPrefsForm = http.getURL(ModToolVersionData.HotkeyPrefsForm_url)
local stream = createStringStream(HotkeyPrefsForm)
_G["HotkeyPrefs"] = createFormFromStream(stream)
stream:destroy()
end
if AccountManager == nil then
AccountManagerForm = http.getURL(ModToolVersionData.AccountManagerFormTest_url)
local stream = createStringStream(AccountManagerForm)
_G["AccountManager"] = createFormFromStream(stream)
stream:destroy()
end
if SaveForm == nil then
SaveForm = http.getURL(ModToolVersionData.SaveAccountForm_url)
local stream = createStringStream(SaveForm)
_G["SaveForm"] = createFormFromStream(stream)
stream:destroy()
end
http.destroy()

GUIUpdate()
end
)

function barThread(thread)
LoadingProgress = 0
LoadingEndingx10 = nil
Delay = nil
while LoadingEndingx10 == nil do
if ModToolVersionData.LoadingBarEndTime ~= nil then
Delay = ModToolVersionData.LoadingBarEndTime
LoadingEndingx10 = os.clock() + Delay
else
break
end
sleep(0)
end
while Turbo_Client.Visible ~= true do
sleep(0)
end
Turbo_Client.text_mainInfo.Caption = "Loading User Info..."

if firstRun == 0 then

while os.clock() < LoadingEndingx10 do
LoadingProgress = math.ceil(100 - (100*(LoadingEndingx10 - os.clock())/Delay))
Turbo_Client.loader_line.Width = LoadingProgress * ((Turbo_Client.loader_background.width - 5)/100)
Turbo_Client.text_loadPercent.Caption = LoadingProgress.."%"
end

end
firstRun = 1
thread.destroy()

end
createThread(barThread)

function SyncMetaData(thread)
if Turbo_Client.loader_line.Width >= (Turbo_Client.loader_background.width -(math.floor(Turbo_Client.loader_background.width/2))) then
UsersIdTable = {}
http = getInternet()
code = http.getURL(ClientDataMeta_url)
while code == nil do
code = http.getURL(ClientDataMeta_url) sleep(0) end
load(code)()
UsersTableget = http.getURL(ModToolVersionData.approvedID_url)
while UsersTableget == nil do
UsersTableget = http.getURL(ModToolVersionData.approvedID_url) sleep(0) end
load(UsersTableget)()
checkAccess(5)
http.destroy()

if Turbo_Client then
if not Turbo_Client.Visible then
thread.destroy()
return
end
end

sleep(10000)
else
sleep(0.1)
end
createThread(SyncMetaData)
end
createThread(SyncMetaData)


function updateGuiOnFullBar(thread)
if Turbo_Client.loader_line.Width == Turbo_Client.loader_background.width -5 then
if Turbo_Client then
if Turbo_Client.Visible then
GUIUpdate()
end
end
sleep(5000)
else
sleep(0.1)
end
createThread(updateGuiOnFullBar)
end
createThread(updateGuiOnFullBar)

